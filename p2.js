#!/usr/bin/env node

/*
 * Project Euler: Problem 2 - Even Fibonacci numbers
 * http://projecteuler.net/problem=2
 *
 * Problem Description:
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
 * first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 * even-valued terms
 */

var fibonacci = function(n) {
    var phi = (1 + Math.sqrt(5)) / 2;
    return Math.floor(Math.pow(phi, n) / Math.sqrt(5) + 0.5);
};

var isEven = function(n) {
    return n % 2 === 0;
};

var sum = function(array) {
    var total = 0;
    for (var i = 0; i < array.length; i++) {
        total += array[i];
    }

    return total;
};

var evenFibonacciSum = function(max) {
    var fibonacciNumbers = [];
    for (var fibValue, n = 2; (fibValue = fibonacci(n)) <= max; n++) {
        if (isEven(fibValue)) {
            fibonacciNumbers.push(fibValue);
        }
    }

    return sum(fibonacciNumbers);
};

console.log(evenFibonacciSum(4000000));
